1. What is a String in Programming? (Marks: 10)

A string is a sequence of characters enclosed in quotes. It's how computers store and work with text data. For example, "Hello World" is a string containing letters, spaces, and punctuation.
Strings can contain any characters including numbers, symbols, and even be empty ("").

2. Difference Between String, Word, and Sentence in Text Processing (Marks: 10)

- String: Any sequence of characters ("abc123!@#")
- Word: A meaningful unit of language, usually separated by spaces ("computer", "running")
- Sentence: A complete thought made of multiple words with proper punctuation ("The cat sits on the mat.")

In programming, we often split sentences into words and process individual strings.

3. What is String Immutability, and Why Does It Matter? (Marks: 10)

String immutability means once a string is created, it cannot be changed.

4. What Are Common String Operations Used in NLP? (Marks: 10)

Common operations include:
- Splitting text into words or sentences
- Converting to lowercase/uppercase for consistency
- Removing punctuation and special characters
- Finding and replacing specific words
- Counting word frequencies
- Joining words back into sentences

5. What Is Tokenization, and How Is It Related to Strings? (Marks: 10)

Tokenization is breaking down text into smaller, meaningful pieces called tokens (usually words). It's the first step in most text processing tasks. For example, "I love programming" becomes ["I", "love", "programming"]. It converts continuous string text into individual components that computers can analyze more easily.